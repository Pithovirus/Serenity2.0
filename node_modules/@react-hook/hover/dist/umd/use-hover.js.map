{"version":3,"file":"use-hover.js","sources":["../../node_modules/@react-hook/event/src/index.tsx","../../node_modules/@react-hook/passive-layout-effect/src/index.tsx","../../node_modules/@react-hook/latest/src/index.tsx","../../src/index.tsx"],"sourcesContent":["import * as React from 'react'\nimport useLayoutEffect from '@react-hook/passive-layout-effect'\nimport useLatest from '@react-hook/latest'\n\nfunction useEvent<\n  T extends Window = Window,\n  K extends keyof WindowEventMap = keyof WindowEventMap\n>(\n  target: Window | null,\n  type: K,\n  listener: WindowEventListener<K>,\n  cleanup?: (...args: any[]) => void\n): void\nfunction useEvent<\n  T extends Document = Document,\n  K extends keyof DocumentEventMap = keyof DocumentEventMap\n>(\n  target: Document | null,\n  type: K,\n  listener: DocumentEventListener<K>,\n  cleanup?: (...args: any[]) => void\n): void\nfunction useEvent<\n  T extends HTMLElement = HTMLElement,\n  K extends keyof HTMLElementEventMap = keyof HTMLElementEventMap\n>(\n  target: React.RefObject<T> | T | null,\n  type: K,\n  listener: ElementEventListener<K>,\n  cleanup?: (...args: any[]) => void\n): void\nfunction useEvent(\n  target: any,\n  type: any,\n  listener: any,\n  cleanup: any = noop\n): void {\n  const storedListener = useLatest(listener)\n  const storedCleanup = useLatest(cleanup)\n\n  useLayoutEffect(() => {\n    const targetEl = target && 'current' in target ? target.current : target\n    if (!targetEl) return\n\n    const listener = function (this: any, ...args: any[]) {\n      storedListener.current.apply(this, args)\n    }\n\n    targetEl.addEventListener(type, listener)\n    const cleanup = storedCleanup.current\n\n    return () => {\n      targetEl.removeEventListener(type, listener)\n      cleanup()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [target, type])\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nfunction noop() {}\n\nexport type ElementEventListener<\n  K extends keyof HTMLElementEventMap = keyof HTMLElementEventMap\n> = (this: HTMLElement, ev: HTMLElementEventMap[K]) => any\n\nexport type DocumentEventListener<\n  K extends keyof DocumentEventMap = keyof DocumentEventMap\n> = (this: Document, ev: DocumentEventMap[K]) => any\n\nexport type WindowEventListener<\n  K extends keyof WindowEventMap = keyof WindowEventMap\n> = (this: Document, ev: WindowEventMap[K]) => any\n\nexport default useEvent\n","import * as React from 'react'\n\nconst usePassiveLayoutEffect =\n  React[\n    typeof document !== 'undefined' && document.createElement !== void 0\n      ? 'useLayoutEffect'\n      : 'useEffect'\n  ]\n\nexport default usePassiveLayoutEffect\n","import * as React from 'react'\n\nconst useLatest = <T extends any>(current: T) => {\n  const storedValue = React.useRef(current)\n  storedValue.current = current\n  return storedValue\n}\n\nexport default useLatest\n","import * as React from 'react'\nimport useEvent from '@react-hook/event'\n\nfunction useHover<T extends HTMLElement>(\n  target: React.RefObject<T> | T | null,\n  options: UseHoverOptions = {}\n): boolean {\n  const {enterDelay, leaveDelay} = options\n  const timeout = React.useRef<number | undefined>()\n  const [hovering, setHovering] = React.useState(false)\n\n  const toggle = (which: boolean) => {\n    if (!canHover()) return\n    const delay = which ? enterDelay : leaveDelay\n    window.clearTimeout(timeout.current)\n\n    if (delay) {\n      timeout.current = window.setTimeout(() => setHovering(which), delay)\n    } else {\n      setHovering(which)\n    }\n  }\n\n  useEvent(target, 'mouseenter', () => toggle(true))\n  useEvent(target, 'mouseleave', () => toggle(false))\n\n  // Cleans up timeout on unmount\n  React.useEffect(\n    () => () => {\n      window.clearTimeout(timeout.current)\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  )\n\n  return hovering\n}\n\nconst canHover = (): boolean =>\n  typeof window !== 'undefined'\n    ? !window.matchMedia('(hover: none)').matches\n    : false\n\nexport interface UseHoverOptions {\n  enterDelay?: number\n  leaveDelay?: number\n}\n\nexport interface UseHoverState {\n  status: 'idle' | 'hovering'\n  timeout: number | undefined\n}\n\nexport type UseHoverAction = {\n  type: 'setStatus'\n  value: 'idle' | 'hovering'\n  force?: boolean\n}\n\nexport default useHover\n"],"names":["useEvent","target","type","listener","cleanup","args","storedListener","current","apply","this","noop","useLatest","storedCleanup","useLayoutEffect","targetEl","addEventListener","removeEventListener","usePassiveLayoutEffect","React","document","createElement","storedValue","options","window","clearTimeout","timeout","enterDelay","leaveDelay","hovering","setHovering","toggle","which","matchMedia","matches","delay","setTimeout"],"mappings":"iOA+BA,SAASA,EACPC,EACAC,EACAC,EACAC,2CAS2CC,2BAAAA,kBACvCC,EAAeC,QAAQC,MAAMC,KAAMJ,YAVvCD,IAAAA,EAAeM,OAETJ,EAAiBK,EAAUR,GAC3BS,EAAgBD,EAAUP,GAEhCS,GAAgB,eACRC,EAAWb,GAAU,YAAaA,EAASA,EAAOM,QAAUN,KAC7Da,OAECX,IAINW,EAASC,iBAAiBb,EAAMC,OAC1BC,EAAUQ,EAAcL,eAEvB,WACLO,EAASE,oBAAoBd,EAAMC,GACnCC,QAGD,CAACH,EAAQC,IAId,SAASQ,KC1DT,IAAMO,EACJC,EACsB,oBAAbC,eAAuD,IAA3BA,SAASC,cACxC,kBACA,aCJFT,EAAY,SAAgBJ,OAC1Bc,EAAcH,SAAaX,UACjCc,EAAYd,QAAUA,EACfc,UCFT,SACEpB,EACAqB,gBAwBIC,OAAOC,aAAaC,EAAQlB,kBAxBhCe,IAAAA,EAA2B,UAEMA,EAA1BI,IAAAA,WAAYC,IAAAA,WACbF,EAAUP,aACgBA,WAAe,GAAxCU,OAAUC,OAEXC,EAAS,SAACC,MA4BE,oBAAXR,SACFA,OAAOS,WAAW,iBAAiBC,aA3BhCC,EAAQH,EAAQL,EAAaC,EACnCJ,OAAOC,aAAaC,EAAQlB,SAExB2B,EACFT,EAAQlB,QAAUgB,OAAOY,8BAAiBN,EAAYE,KAAQG,GAE9DL,EAAYE,YAIhB/B,EAASC,EAAQ,cAAc,kBAAM6B,EAAO,MAC5C9B,EAASC,EAAQ,cAAc,kBAAM6B,EAAO,MAG5CZ,aACE,0BAOKU"}